// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded zlib format compressed contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
