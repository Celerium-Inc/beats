// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded zlib format compressed contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
